#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x


run_mulle_env()
{
   log_fluff "####################################"
   log_fluff ${MULLE_ENV} ${MULLE_ENV_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_ENV} ${MULLE_ENV_FLAGS} "$@"
}


test_simple()
{
   run_mulle_env environment --global set FOO "global"
   run_mulle_env environment --host set FOO "host"
   run_mulle_env environment --user set FOO "user"

   if [ "`run_mulle_env environment --global get FOO`" != "global" -o \
        "`run_mulle_env environment --host get FOO`"   != "host" -o \
        "`run_mulle_env environment --user get FOO`"   != "user" ]
   then
      fail "setup failed"
   fi

   value="`run_mulle_env environment get FOO`"
   [ "${value}" != "user" ] && internal_fail "Wrong value \"${value}\" from get"

   value="`run_mulle_env environment get --output-eval FOO`"
   [ "${value}" != "user" ] && internal_fail "Wrong value \"${value}\" from get"

   run_mulle_env environment --user remove FOO
   value="`run_mulle_env environment get FOO`"
   [ "${value}" != "host" ] && internal_fail "Wrong value \"${value}\" from get"

   run_mulle_env environment --host remove FOO
   value="`run_mulle_env environment get FOO`"
   [ "${value}" != "global" ] && internal_fail "Wrong value \"${value}\" from get"

   run_mulle_env environment --global remove FOO
   value="`run_mulle_env environment get FOO`"
   [ "${value}" != "" ] && internal_fail "Wrong value \"${value}\" from get"

   log_verbose "----- #1 PASSED -----"
}


test_simple2()
{
   local sed_expr

   sed_expr='s/\(.*\)/\1&/'
   run_mulle_env environment --global set SED_EXPR "${sed_expr}"
   value="`run_mulle_env environment get SED_EXPR`"
   [ "${value}" != "${sed_expr}" ] && internal_fail "Wrong value \"${value}\" from get"

   log_verbose "----- #2 PASSED -----"

}


main()
{
   MULLE_ENV_FLAGS="$@"

   _options_mini_main "$@"

   local directory

   directory="`make_tmp_directory`" || exit 1
   directory="${directory:-/tmp/exekutor}"

   cd "${directory}" || exit 1

   run_mulle_env -s init --style none/tight

   test_simple
   test_simple2
}


init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_ENV="${MULLE_ENV:-${PWD}/../../mulle-env}"
}



init "$@"
main "$@"

